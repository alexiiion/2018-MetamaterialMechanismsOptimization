<Application x:Class="MMechanisms__1_Analyze.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             StartupUri="MainWindow.xaml">
            <!--StartupUri="EditorWindow.xaml">-->
    <Application.Resources>

        <!--<RadioButton x:Name="AddShearCellButton" Content="add SHEAR cell" Style="{StaticResource {x:Type ToggleButton}}" IsChecked="{Binding Path=InteractionMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static view:InteractionMode.AddShearCell}}" 
        Margin="5" Background="Gray" Foreground="White" BorderBrush="White" Padding="10,2" BorderThickness="1"></RadioButton>-->

        <System:Double x:Key="GroupHeaderSize">14.0</System:Double>

        <System:Double x:Key="EdgeThickness">2</System:Double>
        <System:Double x:Key="VertexStroke">3</System:Double>

        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Margin" Value="4" />
            <Setter Property="Background" Value="#58595B" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="White" />
            <Setter Property="Padding" Value="8,4" />
            <Setter Property="BorderThickness" Value="2" />
        </Style>

        <Style x:Key="InteractionModeButton" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
            <Setter Property="Margin" Value="4" />
            <Setter Property="Background" Value="#58595B" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="White" />
            <Setter Property="Padding" Value="8,4" />
            <Setter Property="BorderThickness" Value="2" />
             <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{TemplateBinding Content}" TextAlignment="Center" TextWrapping="Wrap" LineHeight="11" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
           <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        --><!--<Border Name="Border" Background="{TemplateBinding Background}"  >
                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                        </Border>--><!--
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="BorderBrush" Value="Cyan" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->
            <!--<Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="BorderBrush" Value="Cyan" />
                    <Setter Property="Background" Value="#58595B" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>-->
        </Style>

        <Style x:Key="DragPointStyle" TargetType="Ellipse">
            <Setter Property="Fill" Value="LightSeaGreen" />
            <Setter Property="Width" Value="4" />
            <Setter Property="Height" Value="4" />
        </Style>

        <Style x:Key="HoverCellStyle" TargetType="Polygon">
            <Setter Property="Fill" Value="LightGray" />
        </Style>

        <Style x:Key="AnchoredVertexStyle" TargetType="Polygon">
            <Setter Property="Fill" Value="Red" />
            <Setter Property="Stroke" Value="Red" />
            <Setter Property="StrokeThickness" Value="8" />
        </Style>


        <Style x:Key="InitialVertexStyle" TargetType="Polygon">
            <Setter Property="Fill" Value="LightGray" />
            <Setter Property="Stroke" Value="Silver" />
            <Setter Property="StrokeThickness" Value="2" />
        </Style>
        <!--<Style x:Key="InitialEdgeStyle" TargetType="Line">
            <Setter Property="Stroke" Value="Gray" />
            <Setter Property="StrokeThickness" Value="1" />
        </Style>-->
        <Style x:Key="InitialEdgeStyle" TargetType="Polygon">
            <Setter Property="Stroke" Value="LightGray" />
            <Setter Property="StrokeThickness" Value="{StaticResource EdgeThickness}" />
            <!--<Setter Property="StrokeThickness" Value="1" />-->
            <Setter Property="Fill" Value="Transparent" />
        </Style>



        <Style x:Key="DeformedVertexStyle" TargetType="Polygon">
            <Setter Property="Fill" Value="Black" />
            <Setter Property="Stroke" Value="Black" />
            <Setter Property="StrokeThickness" Value="{StaticResource VertexStroke}" />
        </Style>
        <!--<Style x:Key="DeformedEdgeStyle" TargetType="Line">
            <Setter Property="Stroke" Value="Black" />
            <Setter Property="StrokeThickness" Value="2" />
        </Style>-->
        <Style x:Key="DeformedEdgeStyle" TargetType="Polygon">
            <Setter Property="Stroke" Value="Black" />
            <Setter Property="StrokeThickness" Value="{StaticResource EdgeThickness}" />
            <Setter Property="Fill" Value="Transparent" />
        </Style>

        <Style x:Key="InitialRigidCellStyle" TargetType="Polygon">
            <!--<Setter Property="Fill" Value="LightGray" />-->
            <Setter Property="Fill" Value="Gainsboro" />
            <Setter Property="Stroke" Value="LightGray" />
            <!--<Setter Property="StrokeThickness" Value="{StaticResource EdgeThickness}" />-->
        </Style>
        <Style x:Key="DeformedRigidCellStyle" TargetType="Polygon">
            <!--<Setter Property="Fill" Value="LightGray" />-->
            <Setter Property="Stroke" Value="Black" />
            <Setter Property="StrokeThickness" Value="{StaticResource EdgeThickness}" />
            <Setter Property="Fill">
                <Setter.Value>
                    <!--<DrawingBrush Viewport="0,0,0.5,0.5" TileMode="Tile" RenderOptions.EdgeMode="Aliased">-->
                    <DrawingBrush>
                        <DrawingBrush.Drawing>
                            <DrawingGroup>
                                <GeometryDrawing Brush="LightGray">
                                    <GeometryDrawing.Geometry>
                                        <RectangleGeometry Rect="0,0,1,1"/>
                                    </GeometryDrawing.Geometry>
                                </GeometryDrawing>
                                <GeometryDrawing>
                                    <GeometryDrawing.Pen>
                                        <Pen Thickness="0.025" Brush="Black"/>
                                    </GeometryDrawing.Pen>
                                    <GeometryDrawing.Geometry>
                                        <GeometryGroup>
                                            <LineGeometry StartPoint="0,1" EndPoint="1,0"/>
                                            <LineGeometry StartPoint="0,0.5" EndPoint="0.5,0"/>
                                            <LineGeometry StartPoint="0.5,1" EndPoint="1,0.5"/>
                                        </GeometryGroup>
                                    </GeometryDrawing.Geometry>
                                </GeometryDrawing>
                            </DrawingGroup>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TODO make this relative to cell size -->
        <PathGeometry x:Key="PathM" Figures="M 10,20 L 20,0 10,10 0,0 0,21"/>
        <PathGeometry x:Key="PathSpiral" Figures="M 20,20 L 20,10 L 10,10 L 10,30 L 30,30 L 30,0 L 0,0 L 0,30"/>
        <PathGeometry x:Key="PathBox" Figures="M 0, 0L 25,0 L 25,25 L 0,25 L 0,0 "/>

        <PathGeometry x:Key="PathLine" Figures="M 0,0 L 13,0 L 25,0"/>
        <PathGeometry x:Key="PathLineStraight" Figures="M 0,0 L 0,0 L 0,25"/>
        <PathGeometry x:Key="PathLineStraightInverse" Figures="M 0,25 L 0,0 L 0,0"/>

        <PathGeometry x:Key="PathLineSlantedInverse" Figures="M 0,0 L -13,13 L -25,25"/>
        <PathGeometry x:Key="PathLineSlantedInverse2" Figures="M 0,0 L 13,-13 L 25,-25"/>
        <PathGeometry x:Key="PathLineSlanted" Figures="M 0,0 L 13,13 L 25,25"/>

        <PathGeometry x:Key="PathCorner" Figures="M 0,0 L 25,0 L 25,25"/>
        <PathGeometry x:Key="PathCornerDown" Figures="M 0,0 L 0,25 L 25,25"/>
        <PathGeometry x:Key="PathOpenBox" Figures="M 0, 0L 0,25 L 15,25 L 15,0  "/>
        <PathGeometry x:Key="PathOpenBoxTransformed" Figures="M 0,0 L 0,25 L 15,25 L -5,0 "/>
        <PathGeometry x:Key="PathHalfCircle" Figures="M 0,0 A 15,15,0,0,1,30,0"/>
        <PathGeometry x:Key="PathArc" Figures="M 0,0 A 25,25,0,0,1,25,25"/>
        <PathGeometry x:Key="PathArcShifted" Figures="M -25,-25 A 25,25,0,0,1,0,0"/>
        <PathGeometry x:Key="PathArcInverse" Figures="M 0,0 A 25,25,0,0,0,25,25"/>
        <PathGeometry x:Key="PathArcCcw" Figures="M 0,25 A 25,25,0,0,1,25,0"/>
        <PathGeometry x:Key="PathArcInverseCcw" Figures="M 0,25 A 25,25,0,0,0,25,0"/>
        <PathGeometry x:Key="PathLineFqz2" Figures="M-50,0c0-4,6-7,13-7s13,3,13,8,6,8,13,8S0,4,0,0"/>
        <PathGeometry x:Key="PathSquiggle" Figures="M23,8A10,10,0,0,0,11,1,20,20,0,0,1,25,25,25,25,0,0,0,0,0"/>

        <Style x:Key="InputPathStyle" TargetType="Shape">
            <Setter Property="Opacity" Value="0.2" />
            <Setter Property="Stroke" Value="Black" />
            <Setter Property="StrokeThickness" Value="8" />
            <Setter Property="StrokeMiterLimit" Value="2" />
        </Style>

        <Style x:Key="TestPathStyle" TargetType="Shape">
            <Setter Property="Stroke" Value="LightSeaGreen" />
            <Setter Property="StrokeThickness" Value="2" />
            <Setter Property="StrokeMiterLimit" Value="2" />
        </Style>

        <Style x:Key="ControlsExpanderStyle" TargetType="Expander">
            <Setter Property="Header">
                <Setter.Value>
                    <ControlTemplate>
                        <Path Name="Arrow" Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel>
                        <Rectangle Width="10" Height="10" Fill="Black"/>
                        <TextBlock Text="{Binding}" FontSize="14" />
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>








        <!-- Fill Brushes -->

        <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#AAA" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />

        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />

        <!-- Border Brushes -->

        <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#CCC" Offset="0.0"/>
                    <GradientStop Color="#444" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#CCC" Offset="0.0"/>
                    <GradientStop Color="#444" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#777" Offset="0.0"/>
                    <GradientStop Color="#000" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#444" Offset="0.0"/>
                    <GradientStop Color="#888" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

        <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />

        <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />

        <!-- Miscellaneous Brushes -->
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

        <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />


        <ControlTemplate x:Key="ExpanderToggleButton" TargetType="ToggleButton">
            <Border Name="Border" Background="Transparent">
                <Path Name="Arrow" Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 5 L 8 0 Z"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="Arrow" Property="Data" Value="M 0 5 L 4 0 L 8 5 Z" />
                </Trigger>
                <!--<Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrush}" />
                </Trigger>-->
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="Expander">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <Border BorderBrush="White" BorderThickness="0,4,0,0" Padding="0,0,0,10">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Name="ContentRow" Height="0"/>
                            </Grid.RowDefinitions>
                            <Border Name="Border" Grid.Row="0" Background="Transparent" BorderThickness="0" >
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton IsChecked="{Binding Path=IsExpanded,Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" OverridesDefaultStyle="True" Template="{StaticResource ExpanderToggleButton}" />
                                    <ContentPresenter Grid.Column="1" Margin="4" ContentSource="Header" RecognizesAccessKey="True" >
                                        <ContentPresenter.ContentTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding}" FontSize="14" />
                                            </DataTemplate>
                                        </ContentPresenter.ContentTemplate>
                                    </ContentPresenter>
                                </Grid>
                            </Border>
                            <Border Name="Content" Grid.Row="1" Margin="0">
                                <ContentPresenter />
                            </Border>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ContentRow" Property="Height" Value="{Binding ElementName=Content,Path=DesiredHeight}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        
    </Application.Resources>
</Application>
