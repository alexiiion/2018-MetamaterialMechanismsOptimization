<Window x:Class="ShearCell_Editor.EditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:hx="clr-namespace:HelixToolkit.Wpf;assembly=HelixToolkit.Wpf"
        xmlns:local="clr-namespace:ShearCell_Editor"
        xmlns:viewMode="clr-namespace:ShearCell_Data.View;assembly=ShearCell_Data"
        xmlns:converter="clr-namespace:ShearCell_Editor.Converter"
        mc:Ignorable="d"
        Title="Editor" Height="800" Width="1200">
    <Window.Resources>
        <hx:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
        <converter:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter" />
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>


        <hx:HelixViewport3D x:Name="GridViewport" Grid.Column="0" ShowCameraInfo="True" MouseDown="view1_MouseDown" MouseMove="view1_MouseMove" MouseUp="view1_MouseUp" MouseLeave="view1_MouseLeave" KeyDown="view1_KeyDown" KeyUp="view1_KeyUp">
            <hx:HelixViewport3D.DefaultCamera>
                <!--<OrthographicCamera Position="0,0,200" LookDirection="0,0,-200" UpDirection="0,1,0" NearPlaneDistance="0.001" Width="50"/>-->
                <PerspectiveCamera Position="0,0,2000" LookDirection="0,0,-2000" UpDirection="0,1,0" FieldOfView="1" NearPlaneDistance="0.001"/>
            </hx:HelixViewport3D.DefaultCamera>
            <hx:DefaultLights/>
            <!--<ModelVisual3D x:Name="AnchorsContainer" Content="{Binding Anchors}"/>
            <ModelVisual3D x:Name="BoundaryContainer" Content="{Binding Boundary}"/>
            <ModelVisual3D x:Name="UndeformedCellsContainer" Content="{Binding UndeformedCells}"/>
            <ModelVisual3D x:Name="DeformedCellsContainer" Content="{Binding DeformedCells}"/>
            <ModelVisual3D x:Name="InputPathsContainer" Content="{Binding InputPaths}"/>
            <ModelVisual3D x:Name="OutputPathsContainer" Content="{Binding OutputPaths}"/>-->
            <ModelVisual3D Content="{Binding Model}"/>
            <hx:GridLinesVisual3D Center="-0.5,-0.5,-0.5" Width="100" Length="100" MinorDistance="1" MajorDistance="10" Thickness="0.02" Fill="LightGray"/>
        </hx:HelixViewport3D>

        <InkCanvas x:Name="DrawingCanvas" EditingMode="Ink" Grid.Column="0" Background="Transparent" 
                   Visibility="{Binding Path=InteractionMode, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static viewMode:InteractionMode.Draw}}"
                   IsHitTestVisible="{Binding Path=SelectedElement, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static viewMode:ElementSelection.Freeform}}">
            <InkCanvas.DefaultDrawingAttributes>
                <DrawingAttributes FitToCurve="True" Color="Green" IgnorePressure="True" />
            </InkCanvas.DefaultDrawingAttributes>
        </InkCanvas>

        <StackPanel x:Name="Menu" Grid.Column="1" Width="300" >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <Label Grid.Row="0" FontFamily="Roboto" FontSize="14" FontWeight="Bold">modes</Label>
                <WrapPanel x:Name="Menu_Modes" Grid.Row="1">
                    <RadioButton x:Name="DrawShapeButton" Content="mark boundary" Style="{StaticResource InteractionModeButton}" IsChecked="{Binding Path=InteractionMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static viewMode:InteractionMode.MarkBoundary}}" />
                    <RadioButton x:Name="AddAnchorsButton" Content="add anchors" Style="{StaticResource InteractionModeButton}" IsChecked="{Binding Path=InteractionMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static viewMode:InteractionMode.AddAnchor}}" />
                    <RadioButton x:Name="AddInputButton" Content="add input" Style="{StaticResource InteractionModeButton}" IsChecked="{Binding Path=InteractionMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static viewMode:InteractionMode.AddInput}}" />
                    <RadioButton x:Name="AddOutputButton" Content="add output" Style="{StaticResource InteractionModeButton}" IsChecked="{Binding Path=InteractionMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static viewMode:InteractionMode.AddOutput}}" />
                    <RadioButton x:Name="AddPath" Content="add path" Style="{StaticResource InteractionModeButton}" IsChecked="{Binding Path=InteractionMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static viewMode:InteractionMode.Draw}}" />
                </WrapPanel>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <Label Grid.Row="0" FontFamily="Roboto" FontSize="14" FontWeight="Bold">elements</Label>
                <WrapPanel x:Name="Menu_Elements" Grid.Row="1" >
                    <RadioButton x:Name="SetRotationButton" Content="add rotation" Style="{StaticResource InteractionModeButton}" 
                                 IsChecked="{Binding Path=SelectedElement, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static viewMode:ElementSelection.Rotation}}" 
                                 IsEnabled="{Binding Path=InteractionMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static viewMode:InteractionMode.Draw}}"/>
                    <RadioButton x:Name="SetLinearDisplacementButton" Content="add linear displacement" Style="{StaticResource InteractionModeButton}" 
                                 IsChecked="{Binding Path=SelectedElement, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static viewMode:ElementSelection.Linear}}" 
                                 IsEnabled="{Binding Path=InteractionMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static viewMode:InteractionMode.Draw}}"/>
                    <RadioButton x:Name="SetFreeformDisplacementButton" Content="add freeform displacement" Style="{StaticResource InteractionModeButton}" 
                                 IsChecked="{Binding Path=SelectedElement, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static viewMode:ElementSelection.Freeform}}" 
                                 IsEnabled="{Binding Path=InteractionMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static viewMode:InteractionMode.Draw}}" />
                </WrapPanel>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <Label Grid.Row="0" FontFamily="Roboto" FontSize="14" FontWeight="Bold">generate mechanism</Label>
                <WrapPanel x:Name="Menu_Motion" Grid.Row="1">
                    <Button Content="preview" Click="OnPreviewMotionClicked"></Button>
                    <Button Content="generate cells" Click="OnGenerateCellsClicked"></Button>
                </WrapPanel>
            </Grid>

            <Grid Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <Label Grid.Row="0" FontFamily="Roboto" FontSize="14" FontWeight="Bold">fabrication</Label>
                <StackPanel x:Name="Menu_Settings" Grid.Row="1">
                    <StackPanel Orientation="Horizontal">
                        <Label x:Name="MinThickness">min. thickness: </Label>
                        <TextBox Width="50" Height="20">0.4 mm</TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label x:Name="ThicknessRatio">thickness ratio: </Label>
                        <TextBox Width="50" Height="20">4:1</TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label x:Name="MaterialE">material elastic modulus E: </Label>
                        <TextBox Width="80" Height="20">15000 Pa</TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label x:Name="MaterialElasticLimit">material elastic limit: </Label>
                        <TextBox Width="80" Height="20">100 N</TextBox>
                    </StackPanel>
                </StackPanel>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <Label Grid.Row="0" FontFamily="Roboto" FontSize="14" FontWeight="Bold">import/export</Label>
                <WrapPanel x:Name="Menu_Persist" Grid.Row="1">
                    <Button>Save</Button>
                    <Button>Load</Button>
                    <Button>Export .stl</Button>
                    <Button>Import .stl</Button>
                </WrapPanel>
            </Grid>

        </StackPanel>
    </Grid>
</Window>
